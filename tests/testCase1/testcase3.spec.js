//test case with setted boundries on it 

import { test, expect } from '@playwright/test';

test('test', async ({ page }) => {
  await page.goto('https://portal.ndesks.com/');
  await page.goto('https://portal.ndesks.com/login');
  await page.getByPlaceholder('john@example.com').click();
  await page.getByPlaceholder('john@example.com').fill('saadali.teczon+1@gmail.com');
  await page.getByLabel('Password').click();
  await page.getByLabel('Password').fill('saad.ali');
  await page.getByLabel('Password').press('Enter');
  await page.pause();
  await page.locator('li').filter({ hasText: 'Management' }).click();
  await page.getByRole('link', { name: 'People' }).click();
  await page.getByRole('row', { name: 'just for visit saadali.teczon+95@gmail.com ' }).getByRole('button').nth(1).click();
  await page.getByLabel('Close').click();
  await page.getByRole('link', { name: 'Workplace' }).click();
  await page.getByRole('tab', { name: 'Roles and Permissions' }).click();
  await page.getByRole('link', { name: 'Add Role' }).click();
  await page.getByLabel('Name*').click();
  await page.getByLabel('Name*').fill('new visitor');
  await page.getByLabel('Description').click();
  await page.getByLabel('Description').fill('only can see tabs but can not edit that');
  await page.locator('div').filter({ hasText: /^FloorsSelect\.\.\.$/ }).locator('svg').click();
  await page.getByText('Read', { exact: true }).click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.locator('div').filter({ hasText: /^LocationsSelect\.\.\.$/ }).locator('svg').click();
  await page.locator('#react-select-6-option-2').click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.locator('div').filter({ hasText: /^ResourcesSelect\.\.\.$/ }).locator('svg').click();
  await page.locator('#react-select-7-option-2').click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.getByText('Peoples\' Management').click();
  await page.locator('div').filter({ hasText: /^TeamSelect\.\.\.$/ }).locator('svg').click();
  await page.getByText('Read', { exact: true }).click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.locator('div').filter({ hasText: /^EmployeesSelect\.\.\.$/ }).locator('svg').click();
  await page.locator('#react-select-12-option-2').click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.locator('div').filter({ hasText: /^RolesSelect\.\.\.$/ }).locator('svg').click();
  await page.locator('#react-select-13-option-2').click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.locator('div').filter({ hasText: /^Vist\/VisitorsSelect\.\.\.$/ }).locator('svg').click();
  await page.locator('#react-select-14-option-2').click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.getByText('Administrative Functions').click();
  await page.locator('.css-tlfecz-indicatorContainer').first().click();
  await page.getByText('Read', { exact: true }).click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.locator('div').filter({ hasText: /^MembersSelect\.\.\.$/ }).locator('svg').click();
  await page.locator('#react-select-16-option-2').click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.locator('div:nth-child(3) > div > .css-b62m3t-container > .css-18za3vu-control > .css-1wy0on6 > .css-tlfecz-indicatorContainer').click();
  await page.locator('#react-select-17-option-2').click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.locator('div:nth-child(4) > div > .css-b62m3t-container > .css-18za3vu-control > .css-1wy0on6 > .css-tlfecz-indicatorContainer').click();
  await page.locator('#react-select-18-option-2').click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.locator('div').filter({ hasText: /^Partners & OffersSelect\.\.\.$/ }).locator('svg').click();
  await page.locator('#react-select-19-option-2').click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.locator('div').filter({ hasText: /^ToursSelect\.\.\.$/ }).locator('svg').click();
  await page.locator('#react-select-20-option-2').click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.locator('div').filter({ hasText: /^TicketsSelect\.\.\.$/ }).locator('svg').click();
  await page.locator('#react-select-21-option-2').click();
  await page.locator('.col-md-12 > .row > .col-md-12 > div').click();
  await page.getByText('Meeting Room Management').click();
  await page.locator('form svg').click();
  await page.getByText('Read', { exact: true }).click();
  await page.locator('div').filter({ hasText: 'Name*DescriptionModules: WorkPlace ManagementPeoples\' ManagementAdministrative F' }).nth(4).click();
  await page.getByText('Settings').click();
  await page.getByRole('button', { name: 'Save' }).click();
  await page.goto('https://portal.ndesks.com/');
  await page.locator('li').filter({ hasText: 'Management' }).click();
  await page.getByRole('link', { name: 'Workplace' }).click();
  await page.getByRole('tab', { name: 'Roles and Permissions' }).click();
  await page.getByRole('link', { name: 'People' }).click();
  await page.getByRole('row', { name: 'just for visit saadali.teczon+95@gmail.com' }).getByRole('button').nth(1).click();
  await page.locator('select[name="role"]').selectOption('new visitor');
  await page.getByRole('button', { name: 'Update' }).click();
  await page.locator('#dropdown-notification').click();
  await page.getByRole('button', { name: 'Logout' }).click();
  await page.getByPlaceholder('john@example.com').click();
  await page.getByPlaceholder('john@example.com').fill('saadali.teczon+95@gmail.com');
  await page.getByLabel('Password').click();
  await page.getByLabel('Password').fill('saad.ali');
  await page.getByRole('button', { name: 'Sign in' }).click();
  await page.getByLabel('Password').click();
  await page.getByLabel('Password').fill('ndesks123@');
  await page.getByRole('button', { name: 'Sign in' }).click();
  await page.locator('li').filter({ hasText: 'Booking' }).click();
  await page.locator('div').filter({ hasText: /^BookingListList$/ }).getByRole('link').click();
  await page.getByRole('button', { name: 'Add Booking(Locked)' }).click();
  await page.getByRole('button', { name: 'Add Booking(Locked)' }).click();
  await page.getByRole('link', { name: 'Floor Plans' }).click();
//   await page.getByRole('button', { name: 'Add Floor Plans' }).click();
//   await page.getByLabel('Close').click();
  await page.getByRole('link', { name: 'Packages' }).click();
  await page.locator('li').filter({ hasText: 'Management' }).click();
  await page.getByRole('link', { name: 'People' }).click();
  await page.getByRole('tab', { name: 'Team' }).click();
  await page.getByRole('link', { name: 'Workplace' }).click();
  await page.getByRole('tab', { name: 'Roles and Permissions' }).click();
  await page.locator('#dropdown-notification').click();
  await page.getByRole('link', { name: 'Account Setting' }).click();
  await page.getByRole('tab', { name: 'Change Password' }).click();
  await page.getByRole('tab', { name: 'Banking Information' }).click();
  await page.getByRole('tab', { name: 'Manage Account' }).click();
  await page.getByRole('tab', { name: 'Integrations' }).click();
  await page.getByRole('button', { name: 'Add' }).click();
  await page.getByRole('button', { name: 'Cancel' }).click();
  await page.locator('#dropdown-notification').click();
  await page.getByRole('button', { name: 'Logout' }).click();
  await page.getByPlaceholder('john@example.com').click();
  await page.getByPlaceholder('john@example.com').fill('saadali.teczon+1@gmail.com');
  await page.getByLabel('Password').click();
  await page.getByLabel('Password').fill('saad.ali');
  await page.getByRole('button', { name: 'Sign in' }).click();
  await page.locator('li').filter({ hasText: 'Management' }).click();
  await page.getByRole('link', { name: 'Workplace' }).click();
  await page.getByRole('tab', { name: 'Roles and Permissions' }).click();
  await page.getByRole('row', { name: 'new visitor only can see tabs but can not edit that' }).locator('#viewMeetingOpen').nth(1).click();
  await page.getByRole('button', { name: 'Yes, delete it!' }).click();
  await page.getByRole('link', { name: 'People' }).click();
  await page.getByRole('row', { name: 'just for visit saadali.teczon+95@gmail.com' }).getByRole('button').nth(1).click();
  await page.locator('select[name="role"]').selectOption('15');
  await page.getByRole('button', { name: 'Update' }).click();
  await page.getByRole('link', { name: 'Workplace' }).click();
  await page.getByRole('tab', { name: 'Roles and Permissions' }).click();
  await page.getByRole('row', { name: 'new visitor only can see tabs but can not edit that' }).locator('#viewMeetingOpen').nth(1).click();
  await page.getByRole('button', { name: 'Yes, delete it!' }).click();
  await page.locator('div').filter({ hasText: 'Ã— Done!Role Deleted Successfully.OKNoCancel' }).first().click();
});